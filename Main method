
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.DataFormat;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;


public class Main {
    
    public static int numSlots;
    public static int exams;
    public static int maxIterations;

    public Main(int numSlots, int exams, int maxIterations) {
        this.numSlots = numSlots;
        this.exams = exams;
        this.maxIterations = maxIterations;
    }
    
    public static int getNumSlots() {
        return numSlots;
    }

    public static int getExams() {
        return exams;
    }


    public static int getMaxIterations() {
        return maxIterations;
    }

    
    
    
    public static void main(String[] args) throws IOException {
        //ReadFromExcel r1 = new ReadFromExcel();
        //r1.readFromEx();
        //r1.insertData();
        createIncidence cr1 = new createIncidence();
        Integer[][] incM = cr1.createIncMatFromDB();
        WriteToExcel wr1 = new WriteToExcel();
        numSlots = 20;
        maxIterations = 10000;
        exams = 30;
        
        //randomSearch.runRandom(incM);
        
        //wr1.printToExcel(randomSearch.runRandom(incM));
        //wr1.printToExcel(HillClimber.runHillClimb(incM));
        //SimulatedAnnealing.runSimAn(incM);
                wr1.printToExcel(SimulatedAnnealing.runSimAn(incM));
    }
}
